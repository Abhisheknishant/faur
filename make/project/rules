#
# this is what gets built
#
TARGET_BINARY = $(A_BIN_DIR)/$(A_APP_NAME)

#
# Subdir for generated code and object files
#
A2X_GEN = a2x_gen
C_GEN_DIR = $(A_SRC_DIR)/$(A2X_GEN)

#
# Project build time
#
C_BUILDTIME_FILE = $(C_GEN_DIR)/time.c

#
# PNG and WAV files we can convert to C code
#
GFX_FILES = $(notdir $(wildcard $(A_GFX_DIR)/*.png))
SFX_FILES = $(notdir $(wildcard $(A_SFX_DIR)/*.wav))

#
# .c gfx & sfx files
#
C_GFX_DIR = $(C_GEN_DIR)/gfx
C_SFX_DIR = $(C_GEN_DIR)/sfx
C_GFX_HEADER = $(C_GEN_DIR)/gfx.h
C_SFX_HEADER = $(C_GEN_DIR)/sfx.h

C_GEN_HEADERS =

ifdef A_GFX_DIR
    C_GEN_HEADERS += $(C_GFX_HEADER)
endif

ifdef A_SFX_DIR
    C_GEN_HEADERS += $(C_SFX_HEADER)
endif

#
# PNG and WAV files in .c form
#
C_GFX_FILES = $(addprefix $(C_GFX_DIR)/gfx_, $(GFX_FILES:.png=.c))
C_SFX_FILES = $(addprefix $(C_SFX_DIR)/sfx_, $(SFX_FILES:.wav=.c))

#
# .c source files
#
C_INC_FILES = $(notdir $(wildcard $(A_SRC_DIR)/*.inc.c))
C_SRC_FILES = $(notdir $(wildcard $(A_SRC_DIR)/*.c))
C_FILES = $(filter-out $(C_INC_FILES), $(C_SRC_FILES))

#
# object file dirs
#
O_DIR = $(A_OBJ_DIR)/obj_$(PLATFORM)
O_GEN_DIR = $(O_DIR)/$(A2X_GEN)
O_GFX_DIR = $(O_GEN_DIR)/gfx
O_SFX_DIR = $(O_GEN_DIR)/sfx

#
# All the object files.
# Keep buildtime separate from the rest, since they are its prerequisites.
#
O_BUILDTIME = $(addprefix $(O_GEN_DIR)/, $(notdir $(C_BUILDTIME_FILE:.c=.o)))
O_FILES = $(addprefix $(O_DIR)/, $(C_FILES:.c=.o)) \
          $(addprefix $(O_GFX_DIR)/, $(notdir $(C_GFX_FILES:.c=.o))) \
          $(addprefix $(O_SFX_DIR)/, $(notdir $(C_SFX_FILES:.c=.o)))

#
# compile flags
#
CFLAGS = \
    -std=c99 \
    -Wall \
    -Wextra \
    -Wconversion \
    -Wcast-align \
    -Wformat-security \
    -Werror \
    -I$(A2X_PATH)/inc \
    $(A_PLATFORM_CFLAGS) \

#
# Accomodate older toolchains
#
ifneq ($(A_PLATFORM_COMPILER_PEDANTIC), false)
    CFLAGS += -pedantic -pedantic-errors
endif

#
# the main target
#
all : $(TARGET_BINARY)

$(TARGET_BINARY) : $(O_FILES) $(O_BUILDTIME)
	@ echo "Building $(A_APP_NAME)"
	@ mkdir -p $(@D)
	@ $(CC) -o $@ $^ \
	$(A_PLATFORM_CFLAGS) \
	$(A_EXTRA_LIBS) \
	-Wl,--whole-archive $(A2X_PATH)/lib/a2x_$(PLATFORM).a -Wl,--no-whole-archive \
	$(A_PLATFORM_LIBS)

#
# pattern rules for building the universe
#
$(C_BUILDTIME_FILE) : $(O_FILES)
	@ mkdir -p $(@D)
	@ $(A2X_PATH)/bin/a2x_buildtime $@

$(C_GFX_DIR)/gfx_%.c : $(A_GFX_DIR)/%.png
	@ mkdir -p $(@D)
	@ $(A2X_PATH)/bin/a2x_bin $< $@ $(@:.c=.h) gfx

$(C_SFX_DIR)/sfx_%.c : $(A_SFX_DIR)/%.wav
	@ mkdir -p $(@D)
	@ $(A2X_PATH)/bin/a2x_bin $< $@ $(@:.c=.h) sfx

$(C_GFX_HEADER) : $(C_GFX_FILES)
	@ $(A2X_PATH)/bin/a2x_header $(C_GFX_DIR) .h $@

$(C_SFX_HEADER) : $(C_SFX_FILES)
	@ $(A2X_PATH)/bin/a2x_header $(C_SFX_DIR) .h $@

$(O_DIR)/%.o : $(A_SRC_DIR)/%.c $(C_GEN_HEADERS)
	@ echo "Compiling $(notdir $<)"
	@ mkdir -p $(@D)
	@ $(CC) -c -o $@ $< $(CFLAGS)

$(O_GFX_DIR)/%.o : $(C_GFX_DIR)/%.c
	@ echo "Compiling $(notdir $<)"
	@ mkdir -p $(@D)
	@ $(CC) -c -o $@ $< $(CFLAGS)

$(O_SFX_DIR)/%.o : $(C_SFX_DIR)/%.c
	@ echo "Compiling $(notdir $<)"
	@ mkdir -p $(@D)
	@ $(CC) -c -o $@ $< $(CFLAGS)

#
# delete all .o files and all generated .c files
#
clean :
	@ echo "Removing $(TARGET_BINARY) $(A_OBJ_DIR) $(C_GEN_DIR)"
	@ rm -rf $(TARGET_BINARY) $(A_OBJ_DIR) $(C_GEN_DIR)

#
# clean-up rule that deletes the built binary
#
cb : cleanbin

cleanbin :
	@ echo "Removing $(A_APP_NAME) binary"
	@ rm -f $(TARGET_BINARY)

#
# run the program
#
run : all
	@ echo "Running $(notdir $(A_APP_NAME))"
	@ cd $(A_BIN_DIR) ; ./$(A_APP_NAME)
