A2X_ROOT = ../..
BIN_DIR  = $(A2X_ROOT)/bin
CFG_DIR  = $(A2X_ROOT)/cfg
INC_DIR  = $(A2X_ROOT)/inc
LIB_DIR  = $(A2X_ROOT)/lib
MAKE_DIR = $(A2X_ROOT)/make
C_DIR    = $(A2X_ROOT)/src
OBJ_DIR  = obj
O_DIR    = $(OBJ_DIR)/obj_$(PLATFORM)

MEDIA_C_DIR = $(C_DIR)/media
MEDIA_O_DIR = $(O_DIR)/media
MEDIA_BIN_FILES = $(wildcard $(MEDIA_C_DIR)/*.png)
MEDIA_C_FILES = $(MEDIA_BIN_FILES:.png=.c)
MEDIA_GEN_FILES = $(MEDIA_C_FILES) $(MEDIA_C_FILES:.c=.h)

HEADER = $(INC_DIR)/a2x.h
LIBRARY = $(LIB_DIR)/a2x_$(PLATFORM).a

COMPILE_TIME := $(shell date "+%Y-%m-%d\ %H:%M:%S")
CURRENT_BRANCH := $(shell git symbolic-ref --short HEAD)

CFLAGS = \
    -std=c99 \
    -Wall \
    -Wextra \
    -Wconversion \
    -Wcast-align \
    -Wformat-security \
    -Werror \
    -DA__MAKE_COMPILE_TIME=\"$(COMPILE_TIME)\" \
    -DA__MAKE_CURRENT_GIT_BRANCH=\"$(CURRENT_BRANCH)\" \
    $(A_PLATFORM_CFLAGS) \

ifneq ($(A_PLATFORM_COMPILER_PEDANTIC), false)
    CFLAGS += -pedantic -pedantic-errors
endif

A2X_PREFIX = a2x_

C_INC_FILES = $(notdir $(wildcard $(C_DIR)/$(A2X_PREFIX)*.inc.c))
C_SRC_FILES = $(notdir $(wildcard $(C_DIR)/$(A2X_PREFIX)*.c))
C_FILES = $(filter-out $(C_INC_FILES), $(C_SRC_FILES))

O_FILES = $(addprefix $(O_DIR)/, $(C_FILES:.c=.o)) \
          $(addprefix $(MEDIA_O_DIR)/, $(notdir $(MEDIA_C_FILES:.c=.o)))

H_FILES = $(wildcard $(C_DIR)/$(A2X_PREFIX)*.p.h)

ALL_DIRS = $(INC_DIR) $(LIB_DIR) $(OBJ_DIR) $(O_DIR) $(MEDIA_O_DIR)

all : $(ALL_DIRS) $(HEADER) $(LIBRARY)

$(ALL_DIRS) :
	@ mkdir -p $@

$(HEADER) : $(H_FILES)
	@ $(BIN_DIR)/a2x_header $(C_DIR) .p.h $(HEADER)
	@ $(BIN_DIR)/a2x_tags $(HEADER)

$(LIBRARY) : $(MEDIA_C_FILES) $(O_FILES)
	@ echo "Building $(notdir $(LIBRARY))"
	@ $(AR) rs $(LIBRARY) $(O_FILES)

$(O_DIR)/%.o : $(C_DIR)/%.c
	@ echo "Compiling $(notdir $<)"
	@ $(CC) -c -o $@ $< $(CFLAGS)

$(MEDIA_C_DIR)/%.c : $(MEDIA_C_DIR)/%.png
	@ $(BIN_DIR)/a2x_bin $< $@ $(@:.c=.h) g_media

clean :
	@ echo "Cleaning a2x $(ALL_DIRS) $(MEDIA_GEN_FILES)"
	@ rm -rf $(ALL_DIRS) $(MEDIA_GEN_FILES)
