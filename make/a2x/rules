A_PREFIX = a2x_

A_DIR_ROOT = ../..
A_DIR_BIN = $(A_DIR_ROOT)/bin
A_DIR_INC = $(A_DIR_ROOT)/inc
A_DIR_LIB = $(A_DIR_ROOT)/lib
A_DIR_SRC = $(A_DIR_ROOT)/src
A_DIR_SRC_MEDIA = $(A_DIR_SRC)/media
A_DIR_SRC_MEDIA_PLATFORM = $(A_DIR_SRC_MEDIA)/$(A_PLATFORM)
A_DIR_OBJ = ./obj
A_DIR_OBJ_PLATFORM = $(A_DIR_OBJ)/$(A_PLATFORM)
A_DIR_OBJ_PLATFORM_MEDIA = $(A_DIR_OBJ_PLATFORM)/media

A_FILES_MEDIA_PNG = $(wildcard $(A_DIR_SRC_MEDIA)/*.png)
A_FILES_MEDIA_PNG_C = $(addprefix $(A_DIR_SRC_MEDIA_PLATFORM)/, $(notdir $(A_FILES_MEDIA_PNG:.png=.c)))
A_FILES_MEDIA_PNG_H = $(A_FILES_MEDIA_PNG_C:.c=.h)

A_FILE_PUBLIC_A2X_HEADER = $(A_DIR_INC)/$(A_PLATFORM)/a2x.h
A_FILES_PUBLIC_A2X_HEADERS = $(wildcard $(A_DIR_SRC)/$(A_PREFIX)*.p.h)
A_FILE_PUBLIC_A2X_LIB = $(A_DIR_LIB)/$(A_PLATFORM)/a2x.a
A_FILE_EDITOR_TAGS := $(shell $(A_DIR_BIN)/a2x_tags -q)

A_FILES_SRC_C_INC = $(notdir $(wildcard $(A_DIR_SRC)/$(A_PREFIX)*.inc.c))
A_FILES_SRC_C_ALL = $(notdir $(wildcard $(A_DIR_SRC)/$(A_PREFIX)*.c))
A_FILES_SRC_C = $(filter-out $(A_FILES_SRC_C_INC), $(A_FILES_SRC_C_ALL))

A_FILES_OBJ = $(addprefix $(A_DIR_OBJ_PLATFORM)/, $(A_FILES_SRC_C:.c=.o)) \
              $(addprefix $(A_DIR_OBJ_PLATFORM_MEDIA)/, $(notdir $(A_FILES_MEDIA_PNG_C:.c=.o)))

A_INFO_COMPILE_TIME := $(shell date "+%Y-%m-%d\ %H:%M:%S")
A_INFO_CURRENT_BRANCH := $(shell git symbolic-ref --short HEAD)

ALL_TARGETS = $(A_FILE_PUBLIC_A2X_HEADER) $(A_FILE_PUBLIC_A2X_LIB)

ifeq ($(A_PLATFORM), linux)
    ALL_TARGETS += $(A_FILE_EDITOR_TAGS)
endif

A_GENERIC_CFLAGS = \
    -std=c99 \
    -Wall \
    -Wextra \
    -Wconversion \
    -Wcast-align \
    -Wformat-security \
    -Werror \
    -pedantic \
    -pedantic-errors \
    -DA__MAKE_COMPILE_TIME=\"$(A_INFO_COMPILE_TIME)\" \
    -DA__MAKE_CURRENT_GIT_BRANCH=\"$(A_INFO_CURRENT_BRANCH)\" \
    -DA__MAKE_PLATFORM_NAME=\"$(A_PLATFORM)\" \
    -D_XOPEN_SOURCE \
    -I../../src/media/$(A_PLATFORM) \
    $(A_PLATFORM_CFLAGS) \

all : $(ALL_TARGETS)

$(A_FILE_PUBLIC_A2X_HEADER) : $(A_FILES_PUBLIC_A2X_HEADERS) $(A_DIR_BIN)/a2x_header
	@ mkdir -p $(@D)
	@ $(A_DIR_BIN)/a2x_header $(A_DIR_SRC) .p.h $@

$(A_FILE_EDITOR_TAGS) : $(A_FILE_PUBLIC_A2X_HEADER) $(A_DIR_BIN)/a2x_tags
	@ $(A_DIR_BIN)/a2x_tags $<

$(A_FILE_PUBLIC_A2X_LIB) : $(A_FILES_OBJ)
	@ echo "Building $(notdir $(A_FILE_PUBLIC_A2X_LIB))"
	@ mkdir -p $(@D)
	@ $(AR) rs $@ $(A_FILES_OBJ)

$(A_DIR_OBJ_PLATFORM)/%.o : $(A_DIR_SRC)/%.c
	@ echo "Compiling $(notdir $<)"
	@ mkdir -p $(@D)
	@ $(CC) -c -o $@ $< $(A_GENERIC_CFLAGS)

$(A_DIR_OBJ_PLATFORM)/media/%.o : $(A_DIR_SRC_MEDIA_PLATFORM)/%.c
	@ echo "Compiling generated $(notdir $<)"
	@ mkdir -p $(@D)
	@ $(CC) -c -o $@ $< $(A_GENERIC_CFLAGS)

$(A_DIR_OBJ_PLATFORM)/a2x_pack_embed.o : $(A_FILES_MEDIA_PNG_H)
$(A_FILES_MEDIA_PNG_H) : $(A_FILES_MEDIA_PNG_C)

$(A_DIR_SRC_MEDIA_PLATFORM)/%.c : $(A_DIR_SRC_MEDIA)/%.png $(A_DIR_BIN)/a2x_bin
	@ mkdir -p $(@D)
	@ $(A_DIR_BIN)/a2x_bin $< $@ $(@:.c=.h) g_media

clean :
	@ echo "Removing $(A_FILE_PUBLIC_A2X_HEADER) $(A_FILE_PUBLIC_A2X_LIB) $(A_DIR_OBJ_PLATFORM) $(A_DIR_SRC_MEDIA_PLATFORM)"
	@ rm -rf $(A_FILE_PUBLIC_A2X_HEADER) $(A_FILE_PUBLIC_A2X_LIB) $(A_DIR_OBJ_PLATFORM) $(A_DIR_SRC_MEDIA_PLATFORM)
