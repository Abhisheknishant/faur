#
# App
#
#   A_CONFIG_APP_AUTHOR
#   A_CONFIG_APP_NAME
#   A_CONFIG_APP_VERSION_MAJOR
#   A_CONFIG_APP_VERSION_MINOR
#   A_CONFIG_APP_VERSION_MICRO
#

A_CONFIG_APP_AUTHOR ?= Who Knows
A_BUILD_CFLAGS += -DA_CONFIG_APP_AUTHOR=\"$(A_CONFIG_APP_AUTHOR)\"

A_CONFIG_APP_NAME ?= Untitled
A_BUILD_CFLAGS += -DA_CONFIG_APP_NAME=\"$(A_CONFIG_APP_NAME)\"

A_CONFIG_APP_VERSION_MAJOR ?= 1
A_CONFIG_APP_VERSION_MINOR ?= 0
A_CONFIG_APP_VERSION_MICRO ?= 0
A_BUILD_CFLAGS += -DA_CONFIG_APP_VERSION=\"$(A_CONFIG_APP_VERSION_MAJOR).$(A_CONFIG_APP_VERSION_MINOR).$(A_CONFIG_APP_VERSION_MICRO)\"

#
# Build
#
#   A_CONFIG_BUILD_CFLAGS
#       Passed to compiler
#
#   A_CONFIG_BUILD_ID
#       Unique name for this build flavor
#
#   A_CONFIG_BUILD_LIBS
#       Passed to linker
#
#   A_CONFIG_BUILD_OPT
#       -O0 -g, -O3 -s, -Os, etc.
#

A_CONFIG_BUILD_ID ?= default
A_BUILD_CFLAGS += $(A_CONFIG_BUILD_OPT)

#
# Dirs
#
#   A_CONFIG_DIR_AST
#       Root-relative path to the project's media assets dir
#
#   A_CONFIG_DIR_BIN
#       Root-relative path to where final executable files are written
#
#   A_CONFIG_DIR_OBJ
#       Root-relative path to where object files are written
#
#   A_CONFIG_DIR_PND
#       Root-relative path to the project's PND staging dir
#
#   A_CONFIG_DIR_ROOT
#       Relative path from make dir to project root
#
#   A_CONFIG_DIR_SRC
#       Root-relative path to the project's source tree
#

A_CONFIG_DIR_AST ?= assets
A_CONFIG_DIR_BIN ?= bin
A_CONFIG_DIR_OBJ ?= obj
A_CONFIG_DIR_PND ?= pnd
A_CONFIG_DIR_ROOT ?= ..
A_CONFIG_DIR_SRC ?= src

#
# Files
#
#   A_CONFIG_FILE_APP
#       Target binary file name
#
#   A_CONFIG_FILE_EMBED, A_CONFIG_FILE_EMBED_EMSCRIPTEN
#       Space-separated file and dir paths relative to project root
#
#   A_CONFIG_FILE_PND
#       Target PND file name
#

A_CONFIG_FILE_APP ?= a.out
A_CONFIG_FILE_PND ?= $(A_CONFIG_FILE_APP).pnd

#
# FPS
#
#   A_CONFIG_FPS_TICK
#   A_CONFIG_FPS_DRAW
#

A_CONFIG_FPS_TICK ?= 30
A_CONFIG_FPS_DRAW ?= 30
A_BUILD_CFLAGS += -DA_CONFIG_FPS_TICK=$(A_CONFIG_FPS_TICK)
A_BUILD_CFLAGS += -DA_CONFIG_FPS_DRAW=$(A_CONFIG_FPS_DRAW)

#
# Libs
#
#   A_CONFIG_LIB_RENDER
#       Possible values: SOFTWARE, SDL
#
#   A_CONFIG_LIB_SDL
#       1 or 2
#
#   A_CONFIG_LIB_SDL_CONFIG
#       Path to sdl-config host binary
#
#   A_CONFIG_LIB_SDL_TIME
#       Whether to use the SDL timer
#

ifeq ($(A_CONFIG_LIB_SDL), 1)
    A_CONFIG_LIB_RENDER ?= SOFTWARE
    A_BUILD_CFLAGS += -DA_CONFIG_LIB_SDL=1
else ifeq ($(A_CONFIG_LIB_SDL), 2)
    A_CONFIG_LIB_RENDER ?= SDL
    A_BUILD_CFLAGS += -DA_CONFIG_LIB_SDL=2
endif

ifdef A_CONFIG_LIB_SDL_CONFIG
    A_SDL_CFLAGS := $(shell $(A_CONFIG_LIB_SDL_CONFIG) --cflags)
    A_SDL_LIBS := $(shell $(A_CONFIG_LIB_SDL_CONFIG) --libs)

    A_BUILD_CFLAGS += $(A_SDL_CFLAGS)

    ifeq ($(A_CONFIG_LIB_SDL), 1)
        A_BUILD_LIBS := $(A_SDL_LIBS) -lSDL_mixer $(A_BUILD_LIBS)
    else ifeq ($(A_CONFIG_LIB_SDL), 2)
        A_BUILD_LIBS := $(A_SDL_LIBS) -lSDL2_mixer $(A_BUILD_LIBS)
    endif
endif

ifeq ($(A_CONFIG_LIB_SDL_TIME), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_LIB_SDL_TIME
endif

A_CONFIG_LIB_RENDER ?= SOFTWARE

ifeq ($(A_CONFIG_LIB_RENDER), SDL)
    A_BUILD_CFLAGS += -DA_CONFIG_LIB_RENDER_SDL=1
endif

ifeq ($(A_CONFIG_LIB_RENDER), SOFTWARE)
    A_BUILD_CFLAGS += -DA_CONFIG_LIB_RENDER_SOFTWARE=1
endif

#
# Make
#
#   A_CONFIG_MAKE_CLEAN
#       Targets to run before the default clean target
#

#
# Screen
#
#   A_CONFIG_SCREEN_ALLOCATE
#       Whether to allocate a pixel buffer, or try to use the platform's own
#
#   A_CONFIG_SCREEN_FULLSCREEN
#   A_CONFIG_SCREEN_MAXIMIZED
#       Whether to start in fullscreen or a maximized window
#
#   A_CONFIG_SCREEN_HARDWARE_HEIGHT
#   A_CONFIG_SCREEN_HARDWARE_WIDTH
#       Hardwired device-specific resolution
#
#   A_CONFIG_SCREEN_HEIGHT
#   A_CONFIG_SCREEN_WIDTH
#       Logical screen resolution
#
#   A_CONFIG_SCREEN_VSYNC
#       Whether to try to use V-sync
#
#   A_CONFIG_SCREEN_WIZ_FIX
#       GP2X Wiz screen tearing fix at the expense of performance
#
#   A_CONFIG_SCREEN_ZOOM
#       Logical screen integer-value zoom
#

ifdef A_CONFIG_SCREEN_HARDWARE_WIDTH
    A_CONFIG_SCREEN_WIDTH ?= $(A_CONFIG_SCREEN_HARDWARE_WIDTH)
    A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_HARDWARE_WIDTH=$(A_CONFIG_SCREEN_HARDWARE_WIDTH)
endif

ifdef A_CONFIG_SCREEN_HARDWARE_HEIGHT
    A_CONFIG_SCREEN_HEIGHT ?= $(A_CONFIG_SCREEN_HARDWARE_HEIGHT)
    A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_HARDWARE_HEIGHT=$(A_CONFIG_SCREEN_HARDWARE_HEIGHT)
endif

A_CONFIG_SCREEN_WIDTH ?= 320
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_WIDTH=$(A_CONFIG_SCREEN_WIDTH)

A_CONFIG_SCREEN_HEIGHT ?= 240
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_HEIGHT=$(A_CONFIG_SCREEN_HEIGHT)

ifeq ($(A_CONFIG_SYSTEM_WIZ), 1)
    A_CONFIG_SCREEN_WIZ_FIX ?= 1
endif

ifdef A_CONFIG_SCREEN_ZOOM
    ifneq ($(A_CONFIG_SCREEN_ZOOM), 1)
        A_CONFIG_SCREEN_ALLOCATE := 1
    endif
endif

ifeq ($(A_CONFIG_LIB_SDL), 2)
    A_CONFIG_SCREEN_ALLOCATE := 1
    A_CONFIG_SCREEN_VSYNC ?= 1
endif

ifeq ($(A_CONFIG_SCREEN_WIZ_FIX), 1)
    A_CONFIG_SCREEN_ALLOCATE := 1
endif

A_CONFIG_SCREEN_ALLOCATE ?= 0
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_ALLOCATE=$(A_CONFIG_SCREEN_ALLOCATE)

A_CONFIG_SCREEN_FULLSCREEN ?= 0
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_FULLSCREEN=$(A_CONFIG_SCREEN_FULLSCREEN)

A_CONFIG_SCREEN_MAXIMIZED ?= 1
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_MAXIMIZED=$(A_CONFIG_SCREEN_MAXIMIZED)

A_CONFIG_SCREEN_VSYNC ?= 0
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_VSYNC=$(A_CONFIG_SCREEN_VSYNC)

A_CONFIG_SCREEN_WIZ_FIX ?= 0
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_WIZ_FIX=$(A_CONFIG_SCREEN_WIZ_FIX)

A_CONFIG_SCREEN_ZOOM ?= 1
A_BUILD_CFLAGS += -DA_CONFIG_SCREEN_ZOOM=$(A_CONFIG_SCREEN_ZOOM)

#
# Systems and platforms
#
#   A_CONFIG_SYSTEM_CAANOO
#   A_CONFIG_SYSTEM_GP2X
#   A_CONFIG_SYSTEM_EMSCRIPTEN
#   A_CONFIG_SYSTEM_LINUX
#   A_CONFIG_SYSTEM_MINGW
#   A_CONFIG_SYSTEM_PANDORA
#   A_CONFIG_SYSTEM_WIZ
#

ifeq ($(A_CONFIG_SYSTEM_CAANOO), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_CAANOO
endif

ifeq ($(A_CONFIG_SYSTEM_EMSCRIPTEN), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_EMSCRIPTEN
endif

ifeq ($(A_CONFIG_SYSTEM_GP2X), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_GP2X
endif

ifeq ($(A_CONFIG_SYSTEM_LINUX), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_LINUX
endif

ifeq ($(A_CONFIG_SYSTEM_MINGW), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_MINGW
endif

ifeq ($(A_CONFIG_SYSTEM_PANDORA), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_PANDORA
endif

ifeq ($(A_CONFIG_SYSTEM_WIZ), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_SYSTEM_WIZ
endif

#
# Traits
#
#   A_CONFIG_TRAIT_DESKTOP
#   A_CONFIG_TRAIT_KEYBOARD
#

ifeq ($(A_CONFIG_TRAIT_DESKTOP), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_TRAIT_DESKTOP
endif

ifeq ($(A_CONFIG_TRAIT_KEYBOARD), 1)
    A_BUILD_CFLAGS += -DA_CONFIG_TRAIT_KEYBOARD
endif
