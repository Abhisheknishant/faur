#
# Variables that the user makefile may set before including this file:
#
# Paths:
#
    A_CONFIG_ROOT ?= ..
#       Relative path from make dir to project root
#
    A_CONFIG_DIR_AST ?= assets
#       Root-relative path to the project's media assets dir
#
    A_CONFIG_DIR_BIN ?= bin
#       Root-relative path to where final executable files are written
#
    A_CONFIG_DIR_OBJ ?= obj
#       Root-relative path to where object files are written
#
    A_CONFIG_DIR_PND ?= pnd
#       Root-relative path to the project's PND staging dir
#
    A_CONFIG_DIR_SRC ?= src
#       Root-relative path to the project's source tree
#
# Files:
#
    A_CONFIG_APP_NAME ?= a.out
#       Target binary file name
#
#   A_CONFIG_EMBED_PATHS, A_CONFIG_EMBED_PATHS_EMSCRIPTEN
#       Space-separated file and dir paths relative to project root
#
    A_CONFIG_PND_NAME ?= $(A_CONFIG_APP_NAME).pnd
#       Target PND file name
#
# Build:
#
    A_CONFIG_BUILD_ID ?= default
#       Unique name for this build flavor
#
#   A_CONFIG_BUILD_CFLAGS
#       Passed to compiler
#
#   A_CONFIG_BUILD_LIBS
#       Passed to linker
#
#   A_CONFIG_MAKE_CLEAN
#       Targets to run before the default clean target
#

#
# Commit config vars
#
A_ROOT    := $(A_CONFIG_ROOT)
A_DIR_AST := $(A_CONFIG_DIR_AST)
A_DIR_BIN := $(A_CONFIG_DIR_BIN)
A_DIR_OBJ := $(A_ROOT)/$(A_CONFIG_DIR_OBJ)/$(A_PLATFORM)_$(A_CONFIG_BUILD_ID)
A_DIR_PND := $(A_CONFIG_DIR_PND)
A_DIR_SRC := $(A_CONFIG_DIR_SRC)

#
# Object files dir for current platform
#
A_DIR_OBJ_APP := $(A_DIR_OBJ)/app
A_DIR_OBJ_A2X := $(A_DIR_OBJ)/a2x

#
# Subdir for generated code and its object files
#
A_DIR_GEN := $(A_DIR_OBJ_APP)/a2x_gen

#
# The final bin that gets built
#
A_FILE_TARGET_BIN := $(A_ROOT)/$(A_DIR_BIN)/$(A_CONFIG_APP_NAME)

#
# Implements the a__embed_application function
#
A_FILE_SRC_GEN_EMBED := $(A_DIR_GEN)/embed.c
A_FILES_EMBED_BIN := $(shell $(A2X_PATH)/bin/a2x_embedfiles -q $(A_ROOT) $(A_CONFIG_EMBED_PATHS))
A_FILES_SRC_GEN_H := $(addprefix $(A_DIR_GEN)/, $(A_FILES_EMBED_BIN:=.h))

#
# .c source files
#
A_FILES_SRC_C_INC := $(shell $(A2X_PATH)/bin/a2x_srcfiles -q $(A_ROOT)/$(A_DIR_SRC) .inc.c)
A_FILES_SRC_C_ALL := $(shell $(A2X_PATH)/bin/a2x_srcfiles -q $(A_ROOT)/$(A_DIR_SRC) .c)
A_FILES_SRC_C := $(filter-out $(A_FILES_SRC_C_INC), $(A_FILES_SRC_C_ALL))

#
# All the object files
#
A_FILES_OBJ := $(addprefix $(A_DIR_OBJ_APP)/, $(A_FILES_SRC_C:=.o)) $(A_FILE_SRC_GEN_EMBED:=.o)

#
# Compiler flags for all targets
#
A_GENERIC_CFLAGS := \
    -DA2X=1 \
    -std=c99 \
    -Wall \
    -Wextra \
    -Wconversion \
    -Wcast-align \
    -Wformat-security \
    -Werror \
    -pedantic \
    -pedantic-errors \
    -fstrict-aliasing \
    -D_XOPEN_SOURCE \
    -I$(A_DIR_OBJ_A2X) \
    $(A_BUILD_CFLAGS) \
    $(A_CONFIG_BUILD_CFLAGS) \

.PHONY : all clean cleanbin run

all : $(A_FILE_TARGET_BIN)

#
# a2x header and lib build rules
#
include $(A2X_PATH)/make/global/a2x

$(A_FILES_OBJ) : $(A2X_FILE_PUBLIC_A2X_HEADER)

$(A_FILE_TARGET_BIN) : $(A_FILES_OBJ) $(A2X_FILE_PUBLIC_A2X_LIB)
	@ mkdir -p $(@D)
	$(CC) -o $@ $^ \
	$(A_BUILD_CFLAGS) \
	$(A_CONFIG_BUILD_LIBS) \
	$(A_DIR_OBJ_A2X)/a2x.a \
	$(A_BUILD_LIBS)

$(A_DIR_GEN)/%.h : $(A_ROOT)/% $(A2X_PATH)/bin/a2x_bin
	@ mkdir -p $(@D)
	@ $(A2X_PATH)/bin/a2x_bin $< $@ $(<:$(A_ROOT)/%=%) a__bin_

$(A_FILE_SRC_GEN_EMBED) : $(A_FILES_SRC_GEN_H) $(A2X_PATH)/bin/a2x_embed
	@ mkdir -p $(@D)
	@ $(A2X_PATH)/bin/a2x_embed $@ $(A_DIR_GEN) a__bin_ $(A_FILES_SRC_GEN_H:$(A_DIR_GEN)/%=%)

$(A_DIR_OBJ_APP)/%.c.o : $(A_ROOT)/$(A_DIR_SRC)/%.c
	@ mkdir -p $(@D)
	$(CC) -c -o $@ $< $(A_GENERIC_CFLAGS)

$(A_DIR_GEN)/%.c.o : $(A_DIR_GEN)/%.c
	@ mkdir -p $(@D)
	$(CC) -c -o $@ $< $(A_GENERIC_CFLAGS)

clean : $(A_CONFIG_MAKE_CLEAN)
	rm -rf $(A_FILE_TARGET_BIN) $(A_DIR_OBJ)

cleanbin :
	rm -f $(A_FILE_TARGET_BIN)

run : all
	cd $(A_ROOT)/$(A_DIR_BIN) ; ./$(A_CONFIG_APP_NAME)
