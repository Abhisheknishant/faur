#!/usr/bin/env python3

"""
    Copyright 2016, 2018 Alex Margarit <alex@alxm.org>
    This file is part of a2x, a C video game framework.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import re

from utils.output import Output
from utils.tool import Tool

class HeaderTool(Tool):
    def process_header(self, FileName, Depth):
        if FileName in self.included:
            return ''

        self.included[FileName] = True

        out = """\
//
// {} START ({})
//
""".format(FileName, Depth)

        for line in self.readtextlines(os.path.join(self.h_dir, FileName)):
            comment_line = False
            include = self.re_include.match(line)

            if include:
                header = include.group(1)

                if header.endswith('.v.h'):
                    self.output.error('{} is a private header'.format(header))

                out += '// {}'.format(line)
                out += self.process_header(header, Depth + 1)
            elif line == '#pragma once\n':
                out += '// {}'.format(line)
            else:
                out += line

        out += """\
//
// {} END ({})
//
""".format(FileName, Depth)

        return out

    def main(self):
        self.h_dir = os.path.abspath(self.get_arg('SourceDir'))
        ext = self.get_arg('Extension')
        umbrella_header = os.path.abspath(self.get_arg('UmbrellaHeader'))

        if not os.path.isdir(self.h_dir):
            self.output.error('{} is not a dir'.format(self.h_dir))

        headers = [f for f in self.listdir(self.h_dir) if f.endswith(ext)]
        headers.sort(key = lambda h: h)

        self.included = {}
        self.re_include = re.compile('^#include "(a2x_.*?\.h)"$')

        out = """\
#pragma once

//
// Generated by {} - not for humans
//

""".format(self.name)

        out += ''.join([self.process_header(h, 0) for h in headers])

        self.writefile(umbrella_header, out)

if __name__ == '__main__':
    HeaderTool('SourceDir Extension UmbrellaHeader').run()
