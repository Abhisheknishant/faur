#!/usr/bin/env python3

"""
    Copyright 2016 Alex Margarit

    This file is part of a2x-framework.

    a2x-framework is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    a2x-framework is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with a2x-framework.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import re

from utils.output import Output
from utils.tool import Tool

class SdkConfigTool(Tool):
    def main(self):
        config_read = self.get_arg('UserConfig')
        config_write = self.get_arg('GeneratedConfig')

        if not os.path.exists(config_read):
            Output.error('{} does not exist'.format(config_read))

        db = {
            'sdk.caanoo.root': ['CAANOO_ROOT', None],
            'sdk.caanoo.toolchain': ['CAANOO_GLIBC', None],
            'sdk.open2x.root': ['OPEN2X_ROOT', None],
            'sdk.open2x.toolchain': ['OPEN2X_GLIBC', None],
            'sdk.pandora.root': ['PANDORA_ROOT', None],
            'sdk.pandora.toolchain': ['PANDORA_TOOLCHAIN', None],
        }

        re_assignment = re.compile('^(.*?)\s*=\s*(.*)$')

        for line in self.readtext(config_read).splitlines():
            line = line.strip()
            assg = re_assignment.match(line)

            if not assg or line[0] == '#':
                continue

            key = assg.group(1)

            if key in db:
                Output.info('{} = {}'.format(db[key][0], assg.group(2)))
                db[key][1] = assg.group(2)

        out = ''

        for key in db:
            if db[key][1]:
                out += '{} = {}\n'.format(db[key][0], db[key][1])

        self.writefile(config_write, out)

if __name__ == '__main__':
    tool = SdkConfigTool('UserConfig GeneratedConfig')
    tool.run()
