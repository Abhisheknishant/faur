#!/usr/bin/env python3

"""
    Copyright 2016, 2017 Alex Margarit

    This file is part of a2x-framework.

    a2x-framework is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    a2x-framework is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with a2x-framework.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import sys

from utils.output import Output
from utils.shell import Shell
from utils.tool import Tool

class InstallTool(Tool):
    def main(self):
        if sys.platform.startswith('linux'):
            make = 'make'
        elif sys.platform.startswith('freebsd'):
            make = 'gmake'
        else:
            Output.error('Unknown platform {}'.format(sys.platform))

        command = self.get_arg('[clean]')
        userconfig = os.path.join(self.cfg_dir, 'sdk.config')
        sdkconfig = os.path.join(self.make_dir, 'sdk.config')

        if command == 'clean':
            if not os.path.exists(sdkconfig):
                Output.note('Run {} first'.format(self.name))
                Output.error('{} does not exist'.format(sdkconfig))

            Output.info('Removing compiled and generated a2x files')
        elif command != '':
            Output.error('Unknown command {}'.format(command))
        else:
            Shell.run('{} {} {}'
                .format(os.path.join(self.bin_dir, 'a2x_sdkconfig'),
                        userconfig,
                        sdkconfig))

            Output.info('Compiling a2x')

        Shell.run('{} --directory={} --jobs {}'
            .format(make, os.path.join(self.make_dir, 'a2x'), command))

        if command == 'clean':
            Shell.run('rm {}'.format(sdkconfig))
        else:
            Output.note('Add {} to your $PATH'.format(self.bin_dir))

if __name__ == '__main__':
    tool = InstallTool('[clean]')
    tool.run()
