#!/usr/bin/env python3

"""
    Copyright 2016-2018 Alex Margarit

    This file is part of a2x-framework.

    a2x-framework is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    a2x-framework is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with a2x-framework.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import sys

from utils.output import Output
from utils.tool import Tool

class InstallTool(Tool):
    def main(self):
        if sys.platform.startswith('linux'):
            make = 'make'
        elif sys.platform.startswith('freebsd'):
            make = 'gmake'
        else:
            self.output.error('Unknown platform {}'.format(sys.platform))

        command = self.get_arg('[clean]')
        userconfig = os.path.join(self.dir_cfg, 'sdk.config')
        sdkconfig = os.path.join(self.dir_cfg, 'sdk.config.make')

        if command == 'clean':
            if not os.path.exists(sdkconfig):
                self.output.error('{} does not exist, run {} first'
                    .format(sdkconfig, self.name))
            elif not os.path.isfile(sdkconfig):
                self.output.error('{} is not a file'.format(sdkconfig))

            self.output.info('Removing compiled and generated a2x files')
        elif command != '':
            self.output.error('Unknown command {}'.format(command))
        else:
            self.shell('{} {} {}'
                .format(os.path.join(self.dir_bin, 'a2x_sdkconfig'),
                        userconfig,
                        sdkconfig))

            self.output.info('Compiling a2x')

        self.shell('{} --directory={} --jobs {}'
            .format(make, os.path.join(self.dir_make, 'a2x'), command))

        if command == 'clean':
            self.shell('rm {}'.format(sdkconfig))
        else:
            self.output.note('Add {} to your $PATH'.format(self.dir_bin))

if __name__ == '__main__':
    InstallTool('[clean]').run()
