#!/usr/bin/env python3

"""
    Copyright 2016-2019 Alex Margarit <alex@alxm.org>
    This file is part of a2x, a C video game framework.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

import os

from utils.tool import Tool

if __name__ == '__main__':
    tool = Tool('File.bin File.h OriginalPath CVarPrefix')

    bin_file = tool.get_arg('File.bin')
    h_file = tool.get_arg('File.h')
    original_path = tool.get_arg('OriginalPath')
    cvar_prefix = tool.get_arg('CVarPrefix')

    if os.path.isdir(bin_file):
        entries = tool.listdir(bin_file)
        bin_data = ''
        bin_size = len(entries)

        for f in entries:
            bin_data += '\n        "{}",'.format(f)

        fmt_content = """\
static const struct {{
    const char* path;
    size_t size;
    const char* entries[{size}];
}} {prefix}{var} = {{
    "{path}",
    {size},
    {{{data}
    }}
}};
"""
    else:
        bin_bytes = tool.readbytes(bin_file)
        bin_data = ''
        bin_size = len(bin_bytes)

        for index, byte in enumerate(bin_bytes):
            if index % 8 == 0:
                bin_data += '\n        '

            bin_data += '0x{:0>2x},'.format(byte)

        fmt_content = """\
static const struct {{
    const char* path;
    size_t size;
    uint8_t buffer[{size}];
}} {prefix}{var} = {{
    "{path}",
    {size},
    {{{data}
    }}
}};
"""

    tool.writefile(h_file, fmt_content.format(
        prefix = cvar_prefix,
        var = tool.sanitizeFileNameForCVar(original_path),
        path = original_path,
        size = bin_size,
        data = bin_data))
